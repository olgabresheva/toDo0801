{"version":3,"sources":["ToDoCreateForm.js","ToDoItem.js","ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["ToDoCreateForm","props","useState","newTaskInput","setNewTaskInput","addTaskDisabled","setAddTaskDisabled","htmlFor","className","type","value","onChange","e","target","length","disabled","onClick","onNewTaskAdd","preventDefault","deleteBtn","width","height","viewBox","fill","xmlns","d","fillRule","doneBtn","toDoBtn","downBtn","upBtn","ToDoItem","editMode","setEditMode","item","title","editTaskTitle","setEditTaskTitle","taskEditSave","id","done","onDoubleClick","onStatusChange","onTaskDelete","onTaskMove","ToDoList","list","map","el","key","onTaskEditSave","initialList","App","setList","updatedList","push","uuid","filter","newTitle","direction","i","findIndex","splice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd62b807.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './Main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction ToDoCreateForm(props) {\n\n    const [newTaskInput, setNewTaskInput] = useState('')\n    const [addTaskDisabled, setAddTaskDisabled] = useState(true);\n\n    const taskInput = (e) => {\n        setNewTaskInput(e.target.value);\n        (newTaskInput.length > 2) ? setAddTaskDisabled(false) : setAddTaskDisabled(true);\n    }\n\n    const addNewTask = (e) => {\n        props.onNewTaskAdd(newTaskInput);\n        setNewTaskInput('');\n        e.preventDefault();\n        setAddTaskDisabled(true)\n    }\n\n    return (\n        <div>\n            <label htmlFor=\"exampleFormControlInput1\"><strong>Your To Do List</strong></label><br/>\n            <form>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={newTaskInput}\n                               onChange={taskInput}/>\n                    </div>\n                    <div className=\"col\">\n                        <button disabled={addTaskDisabled} type=\"submit\" className=\"btn btn-info btn-sm\"\n                                onClick={addNewTask}>Add Task\n                        </button>\n                    </div>\n                </div>\n            </form>\n            <span> </span>\n        </div>\n    );\n}\n\nexport default ToDoCreateForm;\n","import React, {useState} from 'react';\nimport './Main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nconst doneBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst toDoBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n</svg>);\n\nconst downBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n</svg>);\n\nconst upBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-up\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n</svg>);\n\nfunction ToDoItem(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [editTaskTitle, setEditTaskTitle] = useState(props.item.title);\n\n    const onTaskEditSave = () => {\n        props.taskEditSave(props.item.id, editTaskTitle);\n        setEditMode(false);\n    }\n\n    return (\n        <div className=\"input-group\">\n            {editMode\n                ? <>\n                    <input type=\"text\" className=\"form-control form-control-sm\"\n                           value={editTaskTitle} onChange={(e) => setEditTaskTitle(e.target.value)}/>\n                    <button className=\"btn btn-outline-secondary btn-sm\" onClick={onTaskEditSave}>Save</button>\n                </>\n                :\n                <span className={props.item.done ? \"done form-control form-control-sm\" : \"form-control form-control-sm\"}\n                      onDoubleClick={() => setEditMode(true)}>{props.item.title}</span>\n            }\n            <div className=\"input-group-append\" id=\"button-addon\">\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.onStatusChange(props.item.id)}>{props.item.done ? doneBtn : toDoBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.onTaskDelete(props.item.id)}>{deleteBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.onTaskMove(props.item.id, 'up')}>{upBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.onTaskMove(props.item.id, 'down')}>{downBtn}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ToDoItem;\n","import React from 'react';\nimport './Main.css';\nimport ToDoItem from \"./ToDoItem\";\n\n\nfunction ToDoList(props) {\n    return (\n        <div className=\"ToDoList\">\n            <ul className=\"list-unstyled\">\n                {props.list.map(el => <li key={el.id}>\n                    <ToDoItem item={el}\n                              onTaskDelete={props.onTaskDelete}\n                              onStatusChange={props.onStatusChange}\n                              onTaskEditSave={props.onTaskEditSave}\n                              taskEditSave={props.taskEditSave}\n                              onTaskMove={props.onTaskMove}/>\n                </li>)}\n            </ul>\n\n\n        </div>\n    );\n}\n\nexport default ToDoList;\n","import React, {useState} from 'react';\nimport './Main.css';\nimport ToDoCreateForm from \"./ToDoCreateForm\";\nimport ToDoList from \"./ToDoList\";\nimport {uuid} from \"uuidv4\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst initialList = [\n    {id: 1, title: 'Task 1', done: true},\n    {id: 2, title: 'Task 2', done: false},\n    {id: 3, title: 'Task 3', done: true},\n];\n\nfunction App() {\n\n    const [list, setList] = useState(initialList);\n\n    const onNewTaskAdd = (title) => {\n        const updatedList = [...list];\n        updatedList.push({id: uuid(), title: title, done: false});\n        setList(updatedList);\n    }\n\n    const onTaskDelete = (id) => {\n        const updatedList = list.filter(el => el.id !== id);\n        setList(updatedList);\n    }\n\n    const onStatusChange = (id) => {\n        const updatedList = list.map(el => {\n            if (el.id === id) {\n                return ({...el, done: !el.done})\n            } else return el\n        })\n        setList(updatedList);\n    }\n\n    const taskEditSave = (id, newTitle) => {\n        const updatedList = list.map(el => {\n            if (el.id === id) {\n                return ({...el, title: newTitle})\n            } else return el;\n        })\n        setList(updatedList);\n    }\n\n    const onTaskMove = (id, direction) => {\n        let i = list.findIndex(el => el.id === id);\n        let updatedList;\n        if (i !== 0) {\n            updatedList = [...list];\n            if (direction === 'up') {\n                updatedList.splice(i - 1, 0, updatedList.splice(i, 1)[0]);\n            }\n            if (direction === 'down') {\n                updatedList.splice(i + 1, 0, updatedList.splice(i, 1)[0])\n            }\n            setList(updatedList);\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <ToDoCreateForm onNewTaskAdd={onNewTaskAdd}/>\n            <hr/>\n            <ToDoList list={list}\n                      onTaskDelete={onTaskDelete}\n                      onStatusChange={onStatusChange}\n                      taskEditSave={taskEditSave}\n                      onTaskMove={onTaskMove}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}